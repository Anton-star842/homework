#Завдання 4 
class Url:
    def __init__(self, scheme, authority, path="", query="", fragment=""):
        self.scheme = scheme
        self.authority = authority
        self.path = path
        self.query = query
        self.fragment = fragment

    def __eq__(self, other):
        if isinstance(other, str):
            return str(self) == other
        return NotImplemented

    def __str__(self):
        url = f"{self.scheme}://{self.authority}"
        if self.path:
            url += f"/{self.path.strip('/')}"
        if self.query:
            url += f"?{self.query}"
        if self.fragment:
            url += f"#{self.fragment}"
        return url


class HttpsUrl(Url):
    def __init__(self, authority, path="", query="", fragment=""):
        super().__init__("https", authority, path, query, fragment)


class HttpUrl(Url):
    def __init__(self, authority, path="", query="", fragment=""):
        super().__init__("http", authority, path, query, fragment)


class GoogleUrl(HttpsUrl):
    def __init__(self, path="", query="", fragment=""):
        super().__init__("google.com", path, query, fragment)


class WikiUrl(HttpsUrl):
    def __init__(self, path="", query="", fragment=""):
        super().__init__("wikipedia.org", path, query, fragment)


url1 = Url("https", "example.com", "path/to/resource", "key=value", "section")
print(url1)  

https_url = HttpsUrl("example.com", "docs", "q=python")
print(https_url) 

http_url = HttpUrl("example.com")
print(http_url)  

google_url = GoogleUrl("search", "q=openai")
print(google_url)  

wiki_url = WikiUrl("wiki/Python_(programming_language)")
print(wiki_url)  


print(google_url == "https://google.com/search?q=openai")  
print(wiki_url == "https://wikipedia.org/wiki/Python_(programming_language)")
